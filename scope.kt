// scope는 변수나 함수, 클래스 같은 멤버들을 서로 공유하여 사용할 수 있는
// 범위를 지정해 둔 단위
// scope가 적용되는 범위는 패키지 내부, 클래스 내부, 함수 내부
// 패키지 안에 변수나 함수 클래스가 있다면 한 스코프에있는 멤버들이지만
// 그안에 있는 함수나 클래스 안에 변수나 함수가 있다면 패키지 스코프 안에 또다른 하위스코프로 동작
//1. 스코프 외부에서는 스코프 내부의 멤버를 참조연산자( . )로만 참조가 가능합니다.
//2. 동일 스코프안에서는 멤버들을 공유할 수 있습니다.
//3. 하위 스코프에서는 상위 스코프의 멤버를 재정의 할수 있다.

//val A = "패키지 스코프"
//
//class B{
//    fun print(){
//        println(A)
//    }
//}
//fun main() {
//    println(A)
//    B().print()
//}

val A_ = "패키지 스코프"

class B{
    val a = "클래스 스코프"

    fun print(){
        println(a)
    }
}

fun main() {
    val a = "함수 스코프"
    println(a)
    var CC = B()
    CC.print()
}